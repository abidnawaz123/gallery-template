{"ast":null,"code":"var _jsxFileName = \"/home/workspace/Desktop/gallerysite/src/components/Card/Cards.js\",\n  _s = $RefreshSig$();\n// import { Col, Row } from 'antd';\n// import React, { useEffect, useState } from 'react';\n\n// const Cards = () => {\n//     const [catsData, setCatsData] = useState([]);\n\n//     useEffect(() => {\n//         async function fetchData() {\n//             try {\n//                 const response = await fetch(\"https://api.thecatapi.com/v1/images/search?limit=80&mime_types=&order=Random&size=small&page=3&sub_id=demo-ce06ee\");\n//                 if (response.ok) {\n//                     const data = await response.json();\n//                     setCatsData(data);\n//                 } else {\n//                     throw new Error('Network response was not ok');\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching data:', error);\n\n//                 // Retry with exponential backoff\n//                 setTimeout(fetchData, 1000 * Math.pow(2, catsData.length));\n//             }\n//         }\n\n//         fetchData();\n//     }, []);\n\n//     return (\n//         <div>\n//             <h3>Cards</h3>\n//             <Row>\n//                 {catsData.length ?\n//                     catsData.slice(0, 10).map((items, ind) => {\n//                         console.log('items -->>', items);\n//                         return (\n//                             <Col xs={24} md={8} key={items.id}>\n//                                 <div>\n//                                     <img src={items.url} alt={`cat : ${items.id}`} height={300} width={\"100%\"} />\n//                                 </div>\n//                             </Col>\n//                         );\n//                     }) :\n//                     <div>Loading .....</div>\n//                 }\n//             </Row>\n//         </div>\n//     );\n// };\n\n// export default Cards;\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchApiData } from '../redux/apiSlice';\nimport { Col, Row } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  const dispatch = useDispatch();\n  const apiData = useSelector(state => state.api.data);\n  const loading = useSelector(state => state.api.loading);\n  const error = useSelector(state => state.api.error);\n  const fetchDataFromAPIWithRetry = async (retryCount = 0) => {\n    if (retryCount < 3) {\n      // Retry up to 3 times\n      try {\n        await dispatch(fetchApiData());\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        // Retry with exponential backoff\n        setTimeout(() => fetchDataFromAPIWithRetry(retryCount + 1), 1000 * Math.pow(2, retryCount));\n      }\n    }\n  };\n  useEffect(() => {\n    if (loading === 'idle') {\n      fetchDataFromAPIWithRetry();\n    }\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), loading === 'loading' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : loading === 'failed' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: apiData.slice(0, 10).map(item => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.url,\n          alt: \"Cat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Cards, \"OUwupVXJwWo2vfIReBek/G0oa2o=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","fetchApiData","Col","Row","jsxDEV","_jsxDEV","Cards","_s","dispatch","apiData","state","api","data","loading","error","fetchDataFromAPIWithRetry","retryCount","console","setTimeout","Math","pow","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","item","xs","src","url","alt","id","_c","$RefreshReg$"],"sources":["/home/workspace/Desktop/gallerysite/src/components/Card/Cards.js"],"sourcesContent":["// import { Col, Row } from 'antd';\n// import React, { useEffect, useState } from 'react';\n\n// const Cards = () => {\n//     const [catsData, setCatsData] = useState([]);\n\n//     useEffect(() => {\n//         async function fetchData() {\n//             try {\n//                 const response = await fetch(\"https://api.thecatapi.com/v1/images/search?limit=80&mime_types=&order=Random&size=small&page=3&sub_id=demo-ce06ee\");\n//                 if (response.ok) {\n//                     const data = await response.json();\n//                     setCatsData(data);\n//                 } else {\n//                     throw new Error('Network response was not ok');\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching data:', error);\n\n//                 // Retry with exponential backoff\n//                 setTimeout(fetchData, 1000 * Math.pow(2, catsData.length));\n//             }\n//         }\n\n//         fetchData();\n//     }, []);\n\n\n\n//     return (\n//         <div>\n//             <h3>Cards</h3>\n//             <Row>\n//                 {catsData.length ?\n//                     catsData.slice(0, 10).map((items, ind) => {\n//                         console.log('items -->>', items);\n//                         return (\n//                             <Col xs={24} md={8} key={items.id}>\n//                                 <div>\n//                                     <img src={items.url} alt={`cat : ${items.id}`} height={300} width={\"100%\"} />\n//                                 </div>\n//                             </Col>\n//                         );\n//                     }) :\n//                     <div>Loading .....</div>\n//                 }\n//             </Row>\n//         </div>\n//     );\n// };\n\n// export default Cards;\n\n\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchApiData } from '../redux/apiSlice';\nimport { Col, Row } from 'antd';\n\nconst Cards = () => {\n  const dispatch = useDispatch();\n  const apiData = useSelector((state) => state.api.data);\n  const loading = useSelector((state) => state.api.loading);\n  const error = useSelector((state) => state.api.error);\n\n  const fetchDataFromAPIWithRetry = async (retryCount = 0) => {\n    if (retryCount < 3) { // Retry up to 3 times\n      try {\n        await dispatch(fetchApiData());\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        // Retry with exponential backoff\n        setTimeout(() => fetchDataFromAPIWithRetry(retryCount + 1), 1000 * Math.pow(2, retryCount));\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (loading === 'idle') {\n      fetchDataFromAPIWithRetry();\n    }\n  }, [loading]);\n\n  return (\n    <div>\n      <h3>Cards</h3>\n      {loading === 'loading' ? (\n        <div>Loading...</div>\n      ) : loading === 'failed' ? (\n        <div>Error: {error}</div>\n      ) : (\n        <Row>\n          {apiData.slice(0, 10).map((item) => (\n            <Col xs={8} key={item.id}>\n              <img src={item.url} alt=\"Cat\" />\n            </Col>\n          ))}\n        </Row>\n      )}\n    </div>\n  );\n};\n\nexport default Cards;"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,GAAG,EAAEC,GAAG,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,OAAO,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,GAAG,CAACC,IAAI,CAAC;EACtD,MAAMC,OAAO,GAAGb,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,GAAG,CAACE,OAAO,CAAC;EACzD,MAAMC,KAAK,GAAGd,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,GAAG,CAACG,KAAK,CAAC;EAErD,MAAMC,yBAAyB,GAAG,MAAAA,CAAOC,UAAU,GAAG,CAAC,KAAK;IAC1D,IAAIA,UAAU,GAAG,CAAC,EAAE;MAAE;MACpB,IAAI;QACF,MAAMR,QAAQ,CAACP,YAAY,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdG,OAAO,CAACH,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C;QACAI,UAAU,CAAC,MAAMH,yBAAyB,CAACC,UAAU,GAAG,CAAC,CAAC,EAAE,IAAI,GAAGG,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEJ,UAAU,CAAC,CAAC;MAC7F;IACF;EACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACd,IAAIe,OAAO,KAAK,MAAM,EAAE;MACtBE,yBAAyB,CAAC,CAAC;IAC7B;EACF,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb,oBACER,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACbZ,OAAO,KAAK,SAAS,gBACpBR,OAAA;MAAAgB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GACnBZ,OAAO,KAAK,QAAQ,gBACtBR,OAAA;MAAAgB,QAAA,GAAK,SAAO,EAACP,KAAK;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAEzBpB,OAAA,CAACF,GAAG;MAAAkB,QAAA,EACDZ,OAAO,CAACiB,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,GAAG,CAAEC,IAAI,iBAC7BvB,OAAA,CAACH,GAAG;QAAC2B,EAAE,EAAE,CAAE;QAAAR,QAAA,eACThB,OAAA;UAAKyB,GAAG,EAAEF,IAAI,CAACG,GAAI;UAACC,GAAG,EAAC;QAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADjBG,IAAI,CAACK,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CA1CID,KAAK;EAAA,QACQP,WAAW,EACZC,WAAW,EACXA,WAAW,EACbA,WAAW;AAAA;AAAAkC,EAAA,GAJrB5B,KAAK;AA4CX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}