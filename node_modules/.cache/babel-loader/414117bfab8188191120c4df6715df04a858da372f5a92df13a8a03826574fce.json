{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nconst initialState = {\n  data: [],\n  loading: 'idle',\n  error: null\n};\nconst fetchApiData = createAsyncThunk('api/fetchData', async () => {\n  // const response = await fetch(\"https://api.slingacademy.com/v1/sample-data/photos?offset=5&limit=20\");\n  const response = await fetch(\"http://localhost:8000/photos\");\n  if (!response.ok) {\n    throw new Error('Error in response');\n  }\n  const data = await response.json();\n  return data;\n});\nconst addApiData = createAsyncThunk('api/addData', async data => {\n  const response = await fetch(\"http://localhost:8000/photos\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  if (!response.ok) {\n    throw new Error('Error in response');\n  }\n  const responseData = await response.json();\n  return responseData;\n});\nconst deleteApiData = createAsyncThunk('api/deleteData', async id => {\n  console.log('this is id ---.>>', id);\n  const response = await fetch(`http://localhost:8000/photos/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    throw new Error('Error in response');\n  }\n  const data = await response.json();\n  return data;\n});\nconst apiSlice = createSlice({\n  name: 'api',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchApiData.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(fetchApiData.fulfilled, (state, action) => {\n      state.loading = 'succeeded';\n      state.data = action.payload;\n    }).addCase(fetchApiData.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    })\n    //add data\n    .addCase(addApiData.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(addApiData.fulfilled, (state, action) => {\n      state.loading = 'succeeded';\n      state.data = action.payload;\n    }).addCase(addApiData.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    })\n    //delete api\n    .addCase(deleteApiData.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(deleteApiData.fulfilled, (state, action) => {\n      state.loading = 'succeeded';\n      state.data = action.payload;\n    }).addCase(deleteApiData.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport { fetchApiData, deleteApiData, addApiData };\nexport default apiSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","data","loading","error","fetchApiData","response","fetch","ok","Error","json","addApiData","method","headers","body","JSON","stringify","responseData","deleteApiData","id","console","log","apiSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/DELL/Desktop/gallery-template/src/components/redux/apiSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    loading: 'idle',\r\n    error: null,\r\n};\r\n\r\nconst fetchApiData = createAsyncThunk('api/fetchData', async () => {\r\n\r\n    // const response = await fetch(\"https://api.slingacademy.com/v1/sample-data/photos?offset=5&limit=20\");\r\n    const response = await fetch(\"http://localhost:8000/photos\")\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Error in response');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n});\r\n\r\n\r\n\r\nconst addApiData = createAsyncThunk('api/addData', async (data) => {\r\n    const response = await fetch(\"http://localhost:8000/photos\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Error in response');\r\n    }\r\n    const responseData = await response.json();\r\n    return responseData;\r\n});\r\n\r\n\r\n\r\nconst deleteApiData = createAsyncThunk('api/deleteData', async (id) => {\r\n    console.log('this is id ---.>>', id)\r\n    const response = await fetch(`http://localhost:8000/photos/${id}`, {\r\n        method: 'DELETE',\r\n    })\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Error in response');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst apiSlice = createSlice({\r\n    name: 'api',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchApiData.pending, (state) => {\r\n                state.loading = 'loading';\r\n                state.error = null;\r\n            })\r\n            .addCase(fetchApiData.fulfilled, (state, action) => {\r\n                state.loading = 'succeeded';\r\n                state.data = action.payload;\r\n            })\r\n            .addCase(fetchApiData.rejected, (state, action) => {\r\n                state.loading = 'failed';\r\n                state.error = action.error.message;\r\n            })\r\n            //add data\r\n            .addCase(addApiData.pending, (state) => {\r\n                state.loading = 'loading';\r\n                state.error = null;\r\n            })\r\n            .addCase(addApiData.fulfilled, (state, action) => {\r\n                state.loading = 'succeeded';\r\n                state.data = action.payload;\r\n            })\r\n            .addCase(addApiData.rejected, (state, action) => {\r\n                state.loading = 'failed';\r\n                state.error = action.error.message;\r\n            })\r\n            //delete api\r\n            .addCase(deleteApiData.pending, (state) => {\r\n                state.loading = 'loading';\r\n                state.error = null;\r\n            })\r\n            .addCase(deleteApiData.fulfilled, (state, action) => {\r\n                state.loading = 'succeeded';\r\n                state.data = action.payload;\r\n            })\r\n            .addCase(deleteApiData.rejected, (state, action) => {\r\n                state.loading = 'failed';\r\n                state.error = action.error.message;\r\n            });\r\n    },\r\n});\r\n\r\nexport { fetchApiData, deleteApiData, addApiData };\r\nexport default apiSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}