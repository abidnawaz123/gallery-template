{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nconst initialState = {\n  data: [{\n    data: []\n  }],\n  galleryData: [],\n  loading: 'idle',\n  error: null,\n  tag: [],\n  chipList: []\n};\nconst fetchApiData = createAsyncThunk('api/fetchData', async () => {\n  // const response = await fetch(\"https://api.slingacademy.com/v1/sample-data/photos?offset=5&limit=20\");\n  const response = await fetch(\"http://localhost:8000/photos\");\n  if (!response.ok) {\n    throw new Error('Error in response');\n  }\n  const data = await response.json();\n  return data;\n});\nconst fetchGalleryData = createAsyncThunk('api/fetchGalleryData', async () => {\n  // const response = await fetch(\"https://api.slingacademy.com/v1/sample-data/photos?offset=5&limit=20\");\n  const response = await fetch(\"http://localhost:8000/gallery\");\n  if (!response.ok) {\n    throw new Error('Error in response');\n  }\n  const data = await response.json();\n  return data;\n});\nconst addApiData = createAsyncThunk('api/addData', async data => {\n  const response = await fetch(\"http://localhost:8000/photos\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  if (!response.ok) {\n    throw new Error('Error in response');\n  }\n  const responseData = await response.json();\n  return responseData;\n});\nconst addGalleryData = createAsyncThunk('api/galleryData', async data => {\n  const response = await fetch(\"http://localhost:8000/gallery\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  if (!response.ok) {\n    throw new Error('Error in response');\n  }\n  const responseData = await response.json();\n  return responseData;\n});\nconst deleteApiData = createAsyncThunk('api/deleteData', async id => {\n  console.log('this is id ---.>>', id);\n  const response = await fetch(`http://localhost:8000/photos/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    throw new Error('Error in response');\n  }\n  const data = await response.json();\n  return data;\n});\nconst deleteGalleryData = createAsyncThunk('api/deleteGalleryData', async id => {\n  const response = await fetch(`http://localhost:8000/gallery/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    throw new Error('Error in response');\n  }\n  const data = await response.json();\n  return data;\n});\nconst updateLocalDataSize = createAsyncThunk('api/updateItemHeight', async ({\n  id,\n  height\n}) => {\n  try {\n    const response = await fetch(`http://localhost:8000/photos/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        height\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Error in response');\n    }\n    return {\n      id,\n      height\n    };\n  } catch (error) {\n    throw error;\n  }\n});\nconst updateDisabledState = createAsyncThunk('api/updateDisableState', async ({\n  id,\n  disabled\n}) => {\n  try {\n    const response = await fetch(`http://localhost:8000/photos/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        disabled\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Error in response');\n    }\n    return {\n      disabled\n    };\n  } catch (error) {\n    throw error;\n  }\n});\nconst StoreChipList = createAsyncThunk('api/updateChipList', async ({\n  id,\n  data\n}) => {\n  try {\n    const response = await fetch(`http://localhost:8000/photos/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        data\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Error in response');\n    }\n    return {\n      id,\n      data\n    };\n  } catch (error) {\n    throw error;\n  }\n});\nconst apiSlice = createSlice({\n  name: 'api',\n  initialState,\n  reducers: {\n    addLocalData: (state, action) => {\n      state.tag = [...state.tag, action.payload];\n    },\n    deleteLocalData: (state, action) => {\n      state.tag = state.tag.filter((items, index) => {\n        return items.tag !== action.payload;\n      });\n    },\n    deleteCurrData: (state, action) => {\n      state.data = state.data.filter((item, ind) => item.tag !== action.payload);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchApiData.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(fetchApiData.fulfilled, (state, action) => {\n      state.loading = 'succeeded';\n      state.data = action.payload;\n    }).addCase(fetchApiData.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    })\n    //fetch gallery data\n    .addCase(fetchGalleryData.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(fetchGalleryData.fulfilled, (state, action) => {\n      state.loading = 'succeeded';\n      state.galleryData = action.payload;\n    }).addCase(fetchGalleryData.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    })\n\n    //add data\n    .addCase(addApiData.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(addApiData.fulfilled, (state, action) => {\n      state.loading = 'succeeded';\n      state.data = action.payload;\n    }).addCase(addApiData.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    })\n    //delete api\n    .addCase(deleteApiData.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(deleteApiData.fulfilled, (state, action) => {\n      state.loading = 'succeeded';\n      state.data = state.data.filter(items => items.id !== action.payload);\n    }).addCase(deleteApiData.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    })\n\n    //updateHeightOfItem\n    .addCase(updateLocalDataSize.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(updateLocalDataSize.fulfilled, (state, action) => {\n      const {\n        id,\n        height\n      } = action.payload;\n      const updatedData = state.data.map(item => {\n        if (item.id === id) {\n          return {\n            ...item,\n            height: height\n          };\n        }\n        return item;\n      });\n      state.data = updatedData;\n      state.loading = 'succeeded';\n    }).addCase(updateLocalDataSize.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    })\n\n    //update disabled state\n    .addCase(updateDisabledState.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(updateDisabledState.fulfilled, (state, action) => {\n      const {\n        id,\n        disabled\n      } = action.payload;\n      const updatedData = state.data.map(item => {\n        if (item.id === id) {\n          return {\n            ...item,\n            disabled: disabled\n          };\n        }\n        return item;\n      });\n      state.data = updatedData;\n      state.loading = 'succeeded';\n    }).addCase(updateDisabledState.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    })\n\n    ////StoreChipList\n    .addCase(StoreChipList.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(StoreChipList.fulfilled, (state, action) => {\n      const {\n        id,\n        data\n      } = action.payload;\n      const updatedData = state.data.map(item => {\n        if (item.id === id) {\n          return {\n            ...item,\n            data: [...item.data, ...data]\n          };\n        }\n        return item;\n      });\n      state.data = updatedData;\n      state.loading = 'succeeded';\n    }).addCase(StoreChipList.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    })\n\n    //add gallery data\n    .addCase(addGalleryData.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(addGalleryData.fulfilled, (state, action) => {\n      state.loading = 'succeeded';\n      state.galleryData = action.payload;\n    }).addCase(addGalleryData.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    })\n    //delete gallery data\n    .addCase(deleteGalleryData.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(deleteGalleryData.fulfilled, (state, action) => {\n      state.loading = 'succeeded';\n      state.galleryData = state.galleryData.filter(item => item.id !== action.payload);\n    }).addCase(deleteGalleryData.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  addLocalData,\n  deleteLocalData,\n  deleteCurrData,\n  updateChipList\n} = apiSlice.actions;\nexport { fetchApiData, fetchGalleryData, deleteApiData, addApiData, addGalleryData, deleteGalleryData, updateLocalDataSize, updateDisabledState, StoreChipList };\nexport default apiSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","data","galleryData","loading","error","tag","chipList","fetchApiData","response","fetch","ok","Error","json","fetchGalleryData","addApiData","method","headers","body","JSON","stringify","responseData","addGalleryData","deleteApiData","id","console","log","deleteGalleryData","updateLocalDataSize","height","updateDisabledState","disabled","StoreChipList","apiSlice","name","reducers","addLocalData","state","action","payload","deleteLocalData","filter","items","index","deleteCurrData","item","ind","extraReducers","builder","addCase","pending","fulfilled","rejected","message","updatedData","map","updateChipList","actions","reducer"],"sources":["/home/workspace/Desktop/Projects/gallery-template/src/components/redux/apiSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n\nconst initialState = {\n    data: [\n        { data: [] }\n    ],\n    galleryData: [],\n    loading: 'idle',\n    error: null,\n    tag: [],\n    chipList: [],\n};\n\nconst fetchApiData = createAsyncThunk('api/fetchData', async () => {\n\n    // const response = await fetch(\"https://api.slingacademy.com/v1/sample-data/photos?offset=5&limit=20\");\n    const response = await fetch(\"http://localhost:8000/photos\")\n\n    if (!response.ok) {\n        throw new Error('Error in response');\n    }\n    const data = await response.json();\n    return data;\n});\n\nconst fetchGalleryData = createAsyncThunk('api/fetchGalleryData', async () => {\n\n    // const response = await fetch(\"https://api.slingacademy.com/v1/sample-data/photos?offset=5&limit=20\");\n    const response = await fetch(\"http://localhost:8000/gallery\")\n\n    if (!response.ok) {\n        throw new Error('Error in response');\n    }\n    const data = await response.json();\n    return data;\n});\n\n\n\nconst addApiData = createAsyncThunk('api/addData', async (data) => {\n    const response = await fetch(\"http://localhost:8000/photos\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n        throw new Error('Error in response');\n    }\n    const responseData = await response.json();\n    return responseData;\n});\n\nconst addGalleryData = createAsyncThunk('api/galleryData', async (data) => {\n    const response = await fetch(\"http://localhost:8000/gallery\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n        throw new Error('Error in response');\n    }\n    const responseData = await response.json();\n    return responseData;\n});\n\n\n\nconst deleteApiData = createAsyncThunk('api/deleteData', async (id) => {\n    console.log('this is id ---.>>', id)\n    const response = await fetch(`http://localhost:8000/photos/${id}`, {\n        method: 'DELETE',\n    })\n\n    if (!response.ok) {\n        throw new Error('Error in response');\n    }\n    const data = await response.json();\n    return data;\n});\n\nconst deleteGalleryData = createAsyncThunk('api/deleteGalleryData', async (id) => {\n    const response = await fetch(`http://localhost:8000/gallery/${id}`, {\n        method: 'DELETE',\n    })\n\n    if (!response.ok) {\n        throw new Error('Error in response');\n    }\n    const data = await response.json();\n    return data;\n});\n\nconst updateLocalDataSize = createAsyncThunk('api/updateItemHeight', async ({ id, height }) => {\n    try {\n        const response = await fetch(`http://localhost:8000/photos/${id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ height }),\n        });\n\n        if (!response.ok) {\n            throw new Error('Error in response');\n        }\n        return { id, height };\n    } catch (error) {\n        throw error;\n    }\n});\n\nconst updateDisabledState = createAsyncThunk('api/updateDisableState', async ({ id, disabled }) => {\n    try {\n        const response = await fetch(`http://localhost:8000/photos/${id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ disabled }),\n        });\n\n        if (!response.ok) {\n            throw new Error('Error in response');\n        }\n        return { disabled };\n    } catch (error) {\n        throw error;\n    }\n});\n\nconst StoreChipList = createAsyncThunk('api/updateChipList', async ({ id, data }) => {\n    try {\n        const response = await fetch(`http://localhost:8000/photos/${id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ data }),\n        });\n\n        if (!response.ok) {\n            throw new Error('Error in response');\n        }\n        return { id, data };\n    } catch (error) {\n        throw error;\n    }\n});\n\n\nconst apiSlice = createSlice({\n    name: 'api',\n    initialState,\n    reducers: {\n        addLocalData: (state, action) => {\n            state.tag = [...state.tag, action.payload]\n        },\n        deleteLocalData: (state, action) => {\n            state.tag = state.tag.filter((items, index) => {\n                return (items.tag !== action.payload)\n            })\n        },\n        deleteCurrData: (state, action) => {\n            state.data = state.data.filter((item, ind) => item.tag !== action.payload)\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchApiData.pending, (state) => {\n                state.loading = 'loading';\n                state.error = null;\n            })\n            .addCase(fetchApiData.fulfilled, (state, action) => {\n                state.loading = 'succeeded';\n                state.data = action.payload;\n            })\n            .addCase(fetchApiData.rejected, (state, action) => {\n                state.loading = 'failed';\n                state.error = action.error.message;\n            })\n            //fetch gallery data\n            .addCase(fetchGalleryData.pending, (state) => {\n                state.loading = 'loading';\n                state.error = null;\n            })\n            .addCase(fetchGalleryData.fulfilled, (state, action) => {\n                state.loading = 'succeeded';\n                state.galleryData = action.payload;\n            })\n            .addCase(fetchGalleryData.rejected, (state, action) => {\n                state.loading = 'failed';\n                state.error = action.error.message;\n            })\n\n            //add data\n            .addCase(addApiData.pending, (state) => {\n                state.loading = 'loading';\n                state.error = null;\n            })\n            .addCase(addApiData.fulfilled, (state, action) => {\n                state.loading = 'succeeded';\n                state.data = action.payload;\n            })\n            .addCase(addApiData.rejected, (state, action) => {\n                state.loading = 'failed';\n                state.error = action.error.message;\n            })\n            //delete api\n            .addCase(deleteApiData.pending, (state) => {\n                state.loading = 'loading';\n                state.error = null;\n            })\n            .addCase(deleteApiData.fulfilled, (state, action) => {\n                state.loading = 'succeeded';\n                state.data = state.data.filter(items => items.id !== action.payload)\n            })\n            .addCase(deleteApiData.rejected, (state, action) => {\n                state.loading = 'failed';\n                state.error = action.error.message;\n            })\n\n            //updateHeightOfItem\n            .addCase(updateLocalDataSize.pending, (state) => {\n                state.loading = 'loading';\n                state.error = null;\n            })\n            .addCase(updateLocalDataSize.fulfilled, (state, action) => {\n                const { id, height } = action.payload;\n                const updatedData = state.data.map((item) => {\n                    if (item.id === id) {\n                        return {\n                            ...item,\n                            height: height,\n                        };\n                    }\n                    return item;\n                });\n                state.data = updatedData;\n                state.loading = 'succeeded';\n            })\n            .addCase(updateLocalDataSize.rejected, (state, action) => {\n                state.loading = 'failed';\n                state.error = action.error.message;\n            })\n\n\n            //update disabled state\n            .addCase(updateDisabledState.pending, (state) => {\n                state.loading = 'loading';\n                state.error = null;\n            })\n            .addCase(updateDisabledState.fulfilled, (state, action) => {\n                const { id, disabled } = action.payload;\n                const updatedData = state.data.map((item) => {\n                    if (item.id === id) {\n                        return {\n                            ...item,\n                            disabled: disabled,\n                        };\n                    }\n                    return item;\n                });\n                state.data = updatedData;\n                state.loading = 'succeeded';\n            })\n            .addCase(updateDisabledState.rejected, (state, action) => {\n                state.loading = 'failed';\n                state.error = action.error.message;\n            })\n\n\n            ////StoreChipList\n            .addCase(StoreChipList.pending, (state) => {\n                state.loading = 'loading';\n                state.error = null;\n            })\n            .addCase(StoreChipList.fulfilled, (state, action) => {\n                const { id, data } = action.payload;\n                const updatedData = state.data.map((item) => {\n                    if (item.id === id) {\n                        return {\n                            ...item, data: [...item.data, ...data],\n                        };\n                    }\n                    return item;\n                });\n\n                state.data = updatedData;\n                state.loading = 'succeeded';\n            })\n            .addCase(StoreChipList.rejected, (state, action) => {\n                state.loading = 'failed';\n                state.error = action.error.message;\n            })\n\n\n            //add gallery data\n            .addCase(addGalleryData.pending, (state) => {\n                state.loading = 'loading';\n                state.error = null;\n            })\n            .addCase(addGalleryData.fulfilled, (state, action) => {\n                state.loading = 'succeeded';\n                state.galleryData = action.payload;\n            })\n            .addCase(addGalleryData.rejected, (state, action) => {\n                state.loading = 'failed';\n                state.error = action.error.message;\n            })\n            //delete gallery data\n            .addCase(deleteGalleryData.pending, (state) => {\n                state.loading = 'loading';\n                state.error = null;\n            })\n            .addCase(deleteGalleryData.fulfilled, (state, action) => {\n                state.loading = 'succeeded';\n\n                state.galleryData = state.galleryData.filter(item => item.id !== action.payload)\n            })\n            .addCase(deleteGalleryData.rejected, (state, action) => {\n                state.loading = 'failed';\n                state.error = action.error.message;\n            })\n\n    },\n});\n\nexport const { addLocalData, deleteLocalData, deleteCurrData, updateChipList } = apiSlice.actions;\nexport { fetchApiData, fetchGalleryData, deleteApiData, addApiData, addGalleryData, deleteGalleryData, updateLocalDataSize, updateDisabledState, StoreChipList };\nexport default apiSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}