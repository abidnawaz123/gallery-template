{"ast":null,"code":"var _jsxFileName = \"/home/workspace/Desktop/Projects/gallery-template/src/components/dropDown/DropDown.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DownOutlined } from '@ant-design/icons';\nimport { Dropdown, message, Space, Menu, Button } from 'antd';\nimport ChipsArray from '../Tags/tags';\nimport styles from \"./style.module.scss\";\nimport { StoreChipList } from '../redux/apiSlice';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomDropDown = ({\n  currentId\n}) => {\n  _s();\n  const [currState, setCurrState] = useState([]);\n  const dispatch = useDispatch();\n  const items = [{\n    label: 'Nature',\n    key: '1'\n  }, {\n    label: 'City',\n    key: '2'\n  }, {\n    label: 'Work',\n    key: '3'\n  }, {\n    label: 'Internet',\n    key: '4'\n  }];\n  const onClick = item => {\n    const currTag = items.find(i => i.key === item.key).label;\n    const currId = items.find(i => i.key === item.key).key;\n    if (!currState.some(tag => tag.key === currId)) {\n      // setCurrState((prevState) => [...prevState, { label: currTag, key: currId }]);\n      // console.log('this is current State ->', currState)\n      dispatch(StoreChipList({\n        id: id,\n        data: [...currState, {\n          label: currTag,\n          key: currId\n        }]\n      }));\n    }\n  };\n  const menu = /*#__PURE__*/_jsxDEV(Menu, {\n    onClick: onClick,\n    children: items.map(item => /*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: item.label\n    }, item.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.dropDownWrapper,\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        overlay: menu,\n        trigger: [\"click\"],\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: e => e.preventDefault(),\n          children: /*#__PURE__*/_jsxDEV(Space, {\n            children: \"Add Tag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChipsArray, {\n        currState: currState,\n        setCurrState: setCurrState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CustomDropDown, \"Y/UWvk6s0vza6/WkDy2ylTL+e5s=\", false, function () {\n  return [useDispatch];\n});\n_c = CustomDropDown;\nexport default CustomDropDown;\nvar _c;\n$RefreshReg$(_c, \"CustomDropDown\");","map":{"version":3,"names":["React","useState","DownOutlined","Dropdown","message","Space","Menu","Button","ChipsArray","styles","StoreChipList","useDispatch","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomDropDown","currentId","_s","currState","setCurrState","dispatch","items","label","key","onClick","item","currTag","find","i","currId","some","tag","id","data","menu","children","map","Item","fileName","_jsxFileName","lineNumber","columnNumber","className","dropDownWrapper","overlay","trigger","e","preventDefault","_c","$RefreshReg$"],"sources":["/home/workspace/Desktop/Projects/gallery-template/src/components/dropDown/DropDown.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { DownOutlined } from '@ant-design/icons';\nimport { Dropdown, message, Space, Menu, Button } from 'antd';\nimport ChipsArray from '../Tags/tags';\nimport styles from \"./style.module.scss\"\nimport { StoreChipList } from '../redux/apiSlice';\nimport { useDispatch } from 'react-redux';\n\nconst CustomDropDown = ({ currentId }) => {\n  const [currState, setCurrState] = useState([])\n  const dispatch = useDispatch();\n\n  const items = [\n    {\n      label: 'Nature',\n      key: '1',\n    },\n    {\n      label: 'City',\n      key: '2',\n    },\n    {\n      label: 'Work',\n      key: '3',\n    },\n    {\n      label: 'Internet',\n      key: '4',\n    },\n  ];\n\n  const onClick = (item) => {\n    const currTag = items.find((i) => i.key === item.key).label;\n    const currId = items.find((i) => i.key === item.key).key;\n\n    if (!currState.some((tag) => tag.key === currId)) {\n      // setCurrState((prevState) => [...prevState, { label: currTag, key: currId }]);\n      // console.log('this is current State ->', currState)\n      dispatch(StoreChipList({ id: id, data: [...currState, { label: currTag, key: currId }] }))\n    }\n  };\n  const menu = (\n    <Menu onClick={onClick}>\n      {items.map((item) => (\n        <Menu.Item key={item.key}>{item.label}</Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  return (\n    <>\n      <div className={styles.dropDownWrapper}>\n        <Dropdown overlay={menu} trigger={[\"click\"]}>\n          <Button onClick={(e) => e.preventDefault()}>\n            <Space>\n              Add Tag\n            </Space>\n          </Button>\n        </Dropdown>\n        <ChipsArray currState={currState} setCurrState={setCurrState} />\n      </div>\n    </>\n  );\n};\n\nexport default CustomDropDown;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}