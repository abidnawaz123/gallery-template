{"ast":null,"code":"var _jsxFileName = \"/home/workspace/Desktop/Projects/gallery-template/src/components/Card/Cards.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchApiData, deleteApiData, addApiData, updateLocalData } from '../redux/apiSlice';\nimport { Badge, Card, Col, Dropdown, Row } from 'antd';\nimport styles from \"./style.module.scss\";\nimport { MoneyCollectOutlined, DeleteOutlined, SettingOutlined, CloudDownloadOutlined } from \"@ant-design/icons\";\nimport { QqOutlined } from \"@ant-design/icons\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  const [cardSize, setCardSize] = useState(\"400px\");\n  const [cardSequence, setCardSequence] = useState(false);\n  const [currCard, setCurrCard] = useState(\"\");\n  const [listData, setListData] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const dispatch = useDispatch();\n  const apiData = useSelector(state => state.api.data);\n  const loading = useSelector(state => state.api.loading);\n  const error = useSelector(state => state.api.error);\n  const galleryState = useSelector(state => state.api.tag);\n  const fetchDataFromApi = async () => {\n    try {\n      await dispatch(fetchApiData());\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    if (loading === 'idle') {\n      fetchDataFromApi();\n    }\n  }, [loading]);\n  const handleDelete = async id => {\n    dispatch(deleteApiData(id));\n    setTimeout(async () => {\n      await fetchDataFromApi();\n    }, 1000);\n  };\n  useEffect(() => {\n    // Initialize listData with apiData\n    setListData(apiData);\n  }, [apiData]);\n  const handleDownload = async id => {\n    const filteredItem = apiData.filter((items, index) => {\n      return items.id === id;\n    });\n    const item = apiData.find(item => item.id === id);\n    console.log('filteredItem', filteredItem);\n    if (item) {\n      if (item.serverImage) {\n        // If it's a server image, fetch and download it\n        const image = await fetch(item.url);\n        const imageBlob = await image.blob();\n        const imageURL = URL.createObjectURL(imageBlob);\n        const link = document.createElement('a');\n        link.href = imageURL;\n        link.download = item.tag;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } else {\n        const image = await fetch(filteredItem[0].url);\n        const imageBlog = await image.blob();\n        const imageURL = URL.createObjectURL(imageBlog);\n        const link = document.createElement('a');\n        link.href = imageURL;\n        link.download = filteredItem[0].tag;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    }\n  };\n  const smallCardSize = () => {\n    setCardSize(\"350px\");\n    setCardSequence(true);\n  };\n  const mediumCardSize = () => {\n    setCardSize(\"400px\");\n  };\n  const largeCardSize = () => {\n    setCardSize(\"450px\");\n    setCardSequence(false);\n  };\n  const items = [{\n    key: '1',\n    label: /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: smallCardSize,\n      children: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }, this)\n  }, {\n    key: '2',\n    label: /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: mediumCardSize,\n      children: \"medium\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }, this)\n  }, {\n    key: '3',\n    label: /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: largeCardSize,\n      children: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }, this)\n  }];\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth < 1000) {\n        setCardSequence(false);\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  const fileSelectedHandler = async e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = async () => {\n        const dataUrl = reader.result;\n        dispatch(addApiData({\n          description: \"Abid\",\n          url: dataUrl,\n          title: \"Man whom woman produce may rule his man born choose few century\",\n          id: Math.floor(Math.random()),\n          user: Math.random(),\n          tag: `tag${Math.floor(Math.random() * 30 + 5)}`\n        }));\n      };\n      reader.readAsDataURL(file);\n      setTimeout(async () => {\n        await dispatch(fetchApiData());\n      }, 1000);\n    }\n  };\n  const openSetting = id => {\n    setCurrCard(id);\n  };\n  const handleChange = async e => {\n    setInputValue(e.target.value);\n  };\n  const handleSubmit = () => {\n    // Filter the data based on the inputValue\n    const data = apiData.filter(item => {\n      return item.tag === inputValue;\n    });\n    setListData(data);\n  };\n  const handleReset = () => {\n    setListData(apiData);\n  };\n  const handleAddTag = async tags => {\n    const currTaggedItem = listData.filter((items, _) => {\n      return items.tag == tags;\n    });\n    const data = {\n      id: currTaggedItem[0].id,\n      tag: currTaggedItem[0].tag,\n      url: currTaggedItem[0].url\n    };\n    dispatch(updateLocalData(data));\n    setTimeout(async () => {\n      await fetchApiData();\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: styles.inputField,\n      name: \"ONE\",\n      value: inputValue,\n      placeholder: \"Search Image based on tag name\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actionButtons,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        style: {\n          paddingTop: 10,\n          paddingBottom: 10,\n          paddingRight: 20,\n          paddingLeft: 20\n        },\n        children: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        style: {\n          paddingTop: 10,\n          paddingBottom: 10,\n          paddingRight: 20,\n          paddingLeft: 20\n        },\n        children: \"reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/gallery\",\n        className: styles.galleryView,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.listSection,\n          children: [/*#__PURE__*/_jsxDEV(QqOutlined, {\n            style: {\n              fontSize: 40\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.galleryLength,\n            children: galleryState === null || galleryState === void 0 ? void 0 : galleryState.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mainWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.heading,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Upload New File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"photo\",\n          onChange: fileSelectedHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this), loading === 'loading' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }, this) : loading === 'failed' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [30, 30],\n          className: styles.mainRow,\n          children: Array.isArray(listData) && listData.map(item => /*#__PURE__*/_jsxDEV(Col, {\n            xs: 24,\n            sm: 12,\n            md: !cardSequence ? 8 : 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: styles.card,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.cardBottom,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.url,\n                  height: \"100%\",\n                  width: \"100%\",\n                  style: !cardSequence ? {\n                    maxHeight: '400px'\n                  } : {\n                    maxHeight: '300px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                  className: styles.badge,\n                  color: \"darkseagreen\",\n                  count: item.tag\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.bottomSection,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.iconsWrapper,\n                    children: [/*#__PURE__*/_jsxDEV(MoneyCollectOutlined, {\n                      className: styles.image\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(CloudDownloadOutlined, {\n                      onClick: () => {\n                        handleDownload(item.id);\n                      },\n                      className: styles.image\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n                      onClick: () => {\n                        handleDelete(item.id);\n                      },\n                      className: styles.image\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                      menu: {\n                        items\n                      },\n                      placement: \"topLeft\",\n                      arrow: {\n                        pointAtCenter: true\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        style: {\n                          border: 'none'\n                        },\n                        onClick: () => {\n                          openSetting(item.id);\n                        },\n                        children: /*#__PURE__*/_jsxDEV(SettingOutlined, {\n                          className: styles.image\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 249,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 248,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.buttonsSection,\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: styles.addTag,\n                      onClick: () => {\n                        handleAddTag(item.tag);\n                      },\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: styles.removeTag,\n                      children: \"Remove\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 45\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(Cards, \"mG/EzHTTwfFhH2ZM/+cp8WFChek=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Cards;\nexport default Cards;\n{/* <Col xs={24} sm={12} md={!cardSequence ? 8 : 6} key={item.id}>\n <Card className={styles.backgroundImage}>\n <div className={styles.cardsWrapper} style={{ maxWidth: cardSize }} >\n    <img src={item.url ? item.url : sample1} alt=\"img\" height=\"100%\" width=\"100%\" style={{ boxShadow: \"0px 2px 10px 2px black\", borderRadius: 5 }} />\n    <div className={styles.iconsWrapper}>\n        <MoneyCollectOutlined className={styles.image} style={{ fontSize: 20 }} />\n        <CloudDownloadOutlined onClick={() => { handleDownload(item.id) }} className={styles.image} style={{ fontSize: 20 }} />\n        <DeleteOutlined onClick={() => { handleDelete(item.id) }} className={styles.image} style={{ fontSize: 20 }} />\n        <Dropdown\n            menu={{ items }}\n            placement=\"topLeft\"\n            arrow={{\n                pointAtCenter: true,\n            }}\n        >\n            <button style={{ backgroundColor: \"#c93737\", border: 'none' }} onClick={() => { openSetting(item.id) }} ><SettingOutlined className={styles.image} style={{ fontSize: 20 }} /></button >\n        </Dropdown>\n    </div>\n </div>\n </Card>\n </Col> */}\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","fetchApiData","deleteApiData","addApiData","updateLocalData","Badge","Card","Col","Dropdown","Row","styles","MoneyCollectOutlined","DeleteOutlined","SettingOutlined","CloudDownloadOutlined","QqOutlined","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Cards","_s","cardSize","setCardSize","cardSequence","setCardSequence","currCard","setCurrCard","listData","setListData","inputValue","setInputValue","dispatch","apiData","state","api","data","loading","error","galleryState","tag","fetchDataFromApi","console","handleDelete","id","setTimeout","handleDownload","filteredItem","filter","items","index","item","find","log","serverImage","image","fetch","url","imageBlob","blob","imageURL","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","imageBlog","smallCardSize","mediumCardSize","largeCardSize","key","label","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","handleResize","window","innerWidth","addEventListener","removeEventListener","fileSelectedHandler","e","file","target","files","reader","FileReader","onload","dataUrl","result","description","title","Math","floor","random","user","readAsDataURL","openSetting","handleChange","value","handleSubmit","handleReset","handleAddTag","tags","currTaggedItem","_","type","className","inputField","name","placeholder","onChange","actionButtons","style","paddingTop","paddingBottom","paddingRight","paddingLeft","to","galleryView","listSection","fontSize","galleryLength","length","mainWrapper","heading","gutter","mainRow","Array","isArray","map","xs","sm","md","card","cardBottom","src","height","width","maxHeight","badge","color","count","bottomSection","iconsWrapper","menu","placement","arrow","pointAtCenter","border","buttonsSection","addTag","removeTag","_c","$RefreshReg$"],"sources":["/home/workspace/Desktop/Projects/gallery-template/src/components/Card/Cards.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchApiData, deleteApiData, addApiData, updateLocalData } from '../redux/apiSlice';\nimport { Badge, Card, Col, Dropdown, Row } from 'antd';\nimport styles from \"./style.module.scss\"\nimport { MoneyCollectOutlined, DeleteOutlined, SettingOutlined, CloudDownloadOutlined } from \"@ant-design/icons\"\nimport { QqOutlined } from \"@ant-design/icons\"\nimport { Link } from 'react-router-dom';\n\nconst Cards = () => {\n    const [cardSize, setCardSize] = useState(\"400px\")\n    const [cardSequence, setCardSequence] = useState(false)\n    const [currCard, setCurrCard] = useState(\"\")\n    const [listData, setListData] = useState(null)\n    const [inputValue, setInputValue] = useState(\"\")\n\n    const dispatch = useDispatch();\n    const apiData = useSelector(state => state.api.data);\n    const loading = useSelector(state => state.api.loading);\n    const error = useSelector(state => state.api.error);\n\n    const galleryState = useSelector((state) => state.api.tag)\n\n\n\n    const fetchDataFromApi = async () => {\n        try {\n            await dispatch(fetchApiData());\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n\n    useEffect(() => {\n        if (loading === 'idle') {\n            fetchDataFromApi();\n        }\n    }, [loading]);\n\n    const handleDelete = async (id) => {\n\n        dispatch(deleteApiData(id))\n        setTimeout(async () => {\n            await fetchDataFromApi()\n        }, 1000)\n    }\n\n    useEffect(() => {\n        // Initialize listData with apiData\n        setListData(apiData);\n    }, [apiData]);\n\n\n    const handleDownload = async (id) => {\n\n        const filteredItem = apiData.filter((items, index) => {\n            return (items.id === id)\n        })\n\n        const item = apiData.find((item) => item.id === id);\n\n        console.log('filteredItem',filteredItem)\n        if (item) {\n            if (item.serverImage) {\n                // If it's a server image, fetch and download it\n                const image = await fetch(item.url);\n                const imageBlob = await image.blob();\n                const imageURL = URL.createObjectURL(imageBlob);\n\n                const link = document.createElement('a');\n                link.href = imageURL;\n                link.download = item.tag;\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            } else {\n                \n                const image = await fetch(filteredItem[0].url)\n                const imageBlog = await image.blob()\n                const imageURL = URL.createObjectURL(imageBlog)\n\n                const link = document.createElement('a')\n                link.href = imageURL\n                link.download = filteredItem[0].tag\n                document.body.appendChild(link)\n                link.click()\n                document.body.removeChild(link)\n            }\n        }\n    }\n\n        const smallCardSize = () => {\n            setCardSize(\"350px\")\n            setCardSequence(true)\n        }\n\n        const mediumCardSize = () => {\n            setCardSize(\"400px\")\n        }\n        const largeCardSize = () => {\n            setCardSize(\"450px\")\n            setCardSequence(false)\n        }\n\n        const items = [\n            {\n                key: '1',\n                label: (\n                    <a onClick={smallCardSize}>\n                        small\n                    </a>\n                ),\n            },\n            {\n                key: '2',\n                label: (\n                    <a onClick={mediumCardSize}>\n                        medium\n                    </a>\n                ),\n            },\n            {\n                key: '3',\n                label: (\n                    <a onClick={largeCardSize}>\n                        large\n                    </a>\n                ),\n            },\n        ];\n\n        useEffect(() => {\n            const handleResize = () => {\n                if (window.innerWidth < 1000) {\n                    setCardSequence(false);\n                }\n            };\n            window.addEventListener('resize', handleResize);\n            handleResize();\n            return () => {\n                window.removeEventListener('resize', handleResize);\n            };\n        }, []);\n\n\n        const fileSelectedHandler = async (e) => {\n            const file = e.target.files[0];\n            if (file) {\n                const reader = new FileReader();\n                reader.onload = async () => {\n                    const dataUrl = reader.result;\n                    dispatch(addApiData({\n                        description: \"Abid\",\n                        url: dataUrl,\n                        title: \"Man whom woman produce may rule his man born choose few century\",\n                        id: Math.floor(Math.random()),\n                        user: Math.random(),\n                        tag: `tag${Math.floor(Math.random() * 30 + 5)}`\n                    }));\n                };\n                reader.readAsDataURL(file);\n                setTimeout(async () => {\n                    await dispatch(fetchApiData())\n                }, 1000)\n            }\n        }\n        const openSetting = (id) => {\n            setCurrCard(id)\n        }\n\n        const handleChange = async (e) => {\n            setInputValue(e.target.value)\n\n        }\n\n        const handleSubmit = () => {\n            // Filter the data based on the inputValue\n            const data = apiData.filter((item) => {\n                return item.tag === inputValue;\n            });\n            setListData(data);\n        }\n\n        const handleReset = () => {\n            setListData(apiData)\n        }\n        const handleAddTag = async (tags) => {\n\n            const currTaggedItem = listData.filter((items, _) => {\n                return items.tag == tags\n            })\n            const data = {\n                id: currTaggedItem[0].id,\n                tag: currTaggedItem[0].tag,\n                url: currTaggedItem[0].url,\n            }\n            dispatch(updateLocalData(data))\n            setTimeout(async () => {\n                await fetchApiData()\n            }, 1000)\n        }\n        return (\n            <>\n                <input type='text' className={styles.inputField} name='ONE' value={inputValue} placeholder='Search Image based on tag name' onChange={handleChange} />\n                <div className={styles.actionButtons} >\n                    <button onClick={handleSubmit} style={{ paddingTop: 10, paddingBottom: 10, paddingRight: 20, paddingLeft: 20 }}>search</button>\n                    <button onClick={handleReset} style={{ paddingTop: 10, paddingBottom: 10, paddingRight: 20, paddingLeft: 20 }}>reset</button>\n                    <Link to=\"/gallery\" className={styles.galleryView}>\n                        <button className={styles.listSection}>\n                            <QqOutlined style={{ fontSize: 40 }} />\n                            <span className={styles.galleryLength}>{galleryState?.length}</span>\n                        </button>\n                    </Link>\n                </div>\n                <div className={styles.mainWrapper}>\n                    <div className={styles.heading}>\n                        <h1>Upload New File</h1>\n                        <input type=\"file\" name=\"photo\" onChange={fileSelectedHandler} />\n                    </div>\n\n                    {loading === 'loading' ? (\n                        <div>Loading...</div>\n                    ) : loading === 'failed' ? (\n                        <div>Error: {error}</div>\n                    ) : (\n                        <div>\n                            <Row gutter={[30, 30]} className={styles.mainRow}>\n                                {\n                                    Array.isArray(listData) &&\n                                    listData.map((item) => (\n                                        <Col xs={24} sm={12} md={!cardSequence ? 8 : 6} key={item.id}>\n                                            <Card className={styles.card}>\n                                                <div className={styles.cardBottom}>\n                                                    <img src={item.url} height='100%' width='100%' style={!cardSequence ? { maxHeight: '400px' } : { maxHeight: '300px' }} />\n                                                    <Badge className={styles.badge} color='darkseagreen' count={item.tag} />\n                                                    <div className={styles.bottomSection}>\n                                                        <div className={styles.iconsWrapper}>\n                                                            <MoneyCollectOutlined className={styles.image} />\n                                                            <CloudDownloadOutlined onClick={() => { handleDownload(item.id) }} className={styles.image} />\n                                                            <DeleteOutlined onClick={() => { handleDelete(item.id) }} className={styles.image} />\n                                                            <Dropdown\n                                                                menu={{ items }}\n                                                                placement=\"topLeft\"\n                                                                arrow={{\n                                                                    pointAtCenter: true,\n                                                                }}\n                                                            >\n                                                                <button style={{ border: 'none' }} onClick={() => { openSetting(item.id) }} >\n                                                                    <SettingOutlined className={styles.image} /></button >\n                                                            </Dropdown>\n                                                        </div>\n                                                        <div className={styles.buttonsSection}>\n                                                            <button className={styles.addTag} onClick={() => { handleAddTag(item.tag) }}>Add</button>\n                                                            <button className={styles.removeTag}>Remove</button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </Card>\n                                        </Col>\n                                    ))}\n                            </Row>\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    };\n\n    export default Cards;\n\n\n\n    {/* <Col xs={24} sm={12} md={!cardSequence ? 8 : 6} key={item.id}>\n<Card className={styles.backgroundImage}>\n    <div className={styles.cardsWrapper} style={{ maxWidth: cardSize }} >\n        <img src={item.url ? item.url : sample1} alt=\"img\" height=\"100%\" width=\"100%\" style={{ boxShadow: \"0px 2px 10px 2px black\", borderRadius: 5 }} />\n        <div className={styles.iconsWrapper}>\n            <MoneyCollectOutlined className={styles.image} style={{ fontSize: 20 }} />\n            <CloudDownloadOutlined onClick={() => { handleDownload(item.id) }} className={styles.image} style={{ fontSize: 20 }} />\n            <DeleteOutlined onClick={() => { handleDelete(item.id) }} className={styles.image} style={{ fontSize: 20 }} />\n            <Dropdown\n                menu={{ items }}\n                placement=\"topLeft\"\n                arrow={{\n                    pointAtCenter: true,\n                }}\n            >\n                <button style={{ backgroundColor: \"#c93737\", border: 'none' }} onClick={() => { openSetting(item.id) }} ><SettingOutlined className={styles.image} style={{ fontSize: 20 }} /></button >\n            </Dropdown>\n        </div>\n    </div>\n</Card>\n</Col> */}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}