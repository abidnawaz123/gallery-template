{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nconst initialState = {\n  data: [],\n  loading: 'idle',\n  error: null\n};\nconst fetchApiData = createAsyncThunk('api/fetchData', async () => {\n  //   const response = await fetch(\"https://api.thecatapi.com/v1/images/search?limit=80&mime_types=&order=Random&size=small&page=3&sub_id=demo-ce06ee\");\n  const response = await fetch(\"https://image.dummyjson.com/150\").then(response => response.blob()).then(blob => {\n    console.log('Fetched image blob:', blob);\n  });\n});\nconst apiSlice = createSlice({\n  name: 'api',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchApiData.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(fetchApiData.fulfilled, (state, action) => {\n      state.loading = 'succeeded';\n      state.data = action.payload;\n    }).addCase(fetchApiData.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport { fetchApiData };\nexport default apiSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","data","loading","error","fetchApiData","response","fetch","then","blob","console","log","apiSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["/home/workspace/Desktop/gallerysite/src/components/redux/apiSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nconst initialState = {\n    data: [],\n    loading: 'idle',\n    error: null,\n};\n\nconst fetchApiData = createAsyncThunk('api/fetchData', async () => {\n    //   const response = await fetch(\"https://api.thecatapi.com/v1/images/search?limit=80&mime_types=&order=Random&size=small&page=3&sub_id=demo-ce06ee\");\n    const response = await fetch(\"https://image.dummyjson.com/150\")\n        .then(response => response.blob())\n        .then(blob => {\n            console.log('Fetched image blob:', blob);\n        });\n\n});\n\n\nconst apiSlice = createSlice({\n    name: 'api',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchApiData.pending, (state) => {\n                state.loading = 'loading';\n                state.error = null;\n            })\n            .addCase(fetchApiData.fulfilled, (state, action) => {\n                state.loading = 'succeeded';\n                state.data = action.payload;\n            })\n            .addCase(fetchApiData.rejected, (state, action) => {\n                state.loading = 'failed';\n                state.error = action.error.message;\n            });\n    },\n});\n\nexport { fetchApiData };\nexport default apiSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE,MAAM;EACfC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,YAAY,GAAGL,gBAAgB,CAAC,eAAe,EAAE,YAAY;EAC/D;EACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC,CAC1DC,IAAI,CAACF,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CACjCD,IAAI,CAACC,IAAI,IAAI;IACVC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,IAAI,CAAC;EAC5C,CAAC,CAAC;AAEV,CAAC,CAAC;AAGF,MAAMG,QAAQ,GAAGb,WAAW,CAAC;EACzBc,IAAI,EAAE,KAAK;EACXZ,YAAY;EACZa,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACZ,YAAY,CAACa,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAAChB,OAAO,GAAG,SAAS;MACzBgB,KAAK,CAACf,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDa,OAAO,CAACZ,YAAY,CAACe,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAAChB,OAAO,GAAG,WAAW;MAC3BgB,KAAK,CAACjB,IAAI,GAAGmB,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDL,OAAO,CAACZ,YAAY,CAACkB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC/CF,KAAK,CAAChB,OAAO,GAAG,QAAQ;MACxBgB,KAAK,CAACf,KAAK,GAAGiB,MAAM,CAACjB,KAAK,CAACoB,OAAO;IACtC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,SAASnB,YAAY;AACrB,eAAeO,QAAQ,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}