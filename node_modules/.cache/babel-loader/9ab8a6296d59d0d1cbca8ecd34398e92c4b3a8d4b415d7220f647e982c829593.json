{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nconst initialState = {\n  data: [],\n  loading: 'idle',\n  error: null\n};\nconst fetchApiData = createAsyncThunk('api/fetchData', async () => {\n  // const response = await fetch(\"https://api.slingacademy.com/v1/sample-data/photos?offset=5&limit=20\");\n  const response = await fetch(\"http://localhost:8001/photos\");\n  console.log('now the response is ---->>>', response);\n  if (!response.ok) {\n    throw new Error('Error in response');\n  }\n  const data = await response.json();\n  return data;\n});\nconst addApiData = createAsyncThunk('api/addData', async data => {\n  const response = await fetch(\"http://localhost:8000/photos\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  if (!response.ok) {\n    throw new Error('Error in response');\n  }\n  const responseData = await response.json();\n  return responseData;\n});\nconst deleteApiData = createAsyncThunk('api/deleteData', async id => {\n  console.log('this is id ---.>>', id);\n  const response = await fetch(`http://localhost:8000/photos/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    throw new Error('Error in response');\n  }\n  const data = await response.json();\n  return data;\n});\nconst apiSlice = createSlice({\n  name: 'api',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchApiData.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(fetchApiData.fulfilled, (state, action) => {\n      state.loading = 'succeeded';\n      state.data = action.payload;\n    }).addCase(fetchApiData.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    })\n    //add data\n    .addCase(addApiData.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(addApiData.fulfilled, (state, action) => {\n      state.loading = 'succeeded';\n      state.data = action.payload;\n    }).addCase(addApiData.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    })\n    //delete api\n    .addCase(deleteApiData.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(deleteApiData.fulfilled, (state, action) => {\n      state.loading = 'succeeded';\n      state.data = action.payload;\n    }).addCase(deleteApiData.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport { fetchApiData, deleteApiData, addApiData };\nexport default apiSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","data","loading","error","fetchApiData","response","fetch","console","log","ok","Error","json","addApiData","method","headers","body","JSON","stringify","responseData","deleteApiData","id","apiSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["/home/workspace/Desktop/Projects/gallery-template/src/components/redux/apiSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nconst initialState = {\n    data: [],\n    loading: 'idle',\n    error: null,\n};\n\nconst fetchApiData = createAsyncThunk('api/fetchData', async () => {\n\n    // const response = await fetch(\"https://api.slingacademy.com/v1/sample-data/photos?offset=5&limit=20\");\n    const response = await fetch(\"http://localhost:8001/photos\")\n    console.log('now the response is ---->>>',response)\n\n    if (!response.ok) {\n        throw new Error('Error in response');\n    }\n    const data = await response.json();\n    return data;\n});\n\n\n\nconst addApiData = createAsyncThunk('api/addData', async (data) => {\n    const response = await fetch(\"http://localhost:8000/photos\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n        throw new Error('Error in response');\n    }\n    const responseData = await response.json();\n    return responseData;\n});\n\n\n\nconst deleteApiData = createAsyncThunk('api/deleteData', async (id) => {\n    console.log('this is id ---.>>', id)\n    const response = await fetch(`http://localhost:8000/photos/${id}`, {\n        method: 'DELETE',\n    })\n\n    if (!response.ok) {\n        throw new Error('Error in response');\n    }\n    const data = await response.json();\n    return data;\n});\n\n\n\n\n\nconst apiSlice = createSlice({\n    name: 'api',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchApiData.pending, (state) => {\n                state.loading = 'loading';\n                state.error = null;\n            })\n            .addCase(fetchApiData.fulfilled, (state, action) => {\n                state.loading = 'succeeded';\n                state.data = action.payload;\n            })\n            .addCase(fetchApiData.rejected, (state, action) => {\n                state.loading = 'failed';\n                state.error = action.error.message;\n            })\n            //add data\n            .addCase(addApiData.pending, (state) => {\n                state.loading = 'loading';\n                state.error = null;\n            })\n            .addCase(addApiData.fulfilled, (state, action) => {\n                state.loading = 'succeeded';\n                state.data = action.payload;\n            })\n            .addCase(addApiData.rejected, (state, action) => {\n                state.loading = 'failed';\n                state.error = action.error.message;\n            })\n            //delete api\n            .addCase(deleteApiData.pending, (state) => {\n                state.loading = 'loading';\n                state.error = null;\n            })\n            .addCase(deleteApiData.fulfilled, (state, action) => {\n                state.loading = 'succeeded';\n                state.data = action.payload;\n            })\n            .addCase(deleteApiData.rejected, (state, action) => {\n                state.loading = 'failed';\n                state.error = action.error.message;\n            });\n    },\n});\n\nexport { fetchApiData, deleteApiData, addApiData };\nexport default apiSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}