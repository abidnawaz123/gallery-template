{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nconst initialState = {\n  data: [],\n  loading: 'idle',\n  error: null,\n  tag: []\n};\nconst fetchApiData = createAsyncThunk('api/fetchData', async () => {\n  // const response = await fetch(\"https://api.slingacademy.com/v1/sample-data/photos?offset=5&limit=20\");\n  const response = await fetch(\"http://localhost:8000/photos\");\n  if (!response.ok) {\n    throw new Error('Error in response');\n  }\n  const data = await response.json();\n  return data;\n});\nconst addApiData = createAsyncThunk('api/addData', async data => {\n  const response = await fetch(\"http://localhost:8000/photos\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  if (!response.ok) {\n    throw new Error('Error in response');\n  }\n  const responseData = await response.json();\n  return responseData;\n});\nconst deleteApiData = createAsyncThunk('api/deleteData', async id => {\n  console.log('this is id ---.>>', id);\n  const response = await fetch(`http://localhost:8000/photos/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    throw new Error('Error in response');\n  }\n  const data = await response.json();\n  return data;\n});\n\n// const updateLocalDataSize = createAsyncThunk('api/updateItemHeight', async (data) => {\n//     const response = await fetch(`http://localhost:8000/photos/`, {\n//         method: 'PUT',\n//         body:JSON.stringify({data})\n//     })\n\n//     if (!response.ok) {\n//         throw new Error('Error in response');\n//     }\n//     const responseData = await response.json();\n//     return responseData;\n// });\n\n// const updateLocalDataSize = createAsyncThunk('api/updateItemHeight', async ({id,height}) => {\n//     const response = await fetch(`http://localhost:8000/photos/${id}`, {\n//         method: 'PUT',\n//         headers: {\n//             'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(height),\n//     });\n\n//     if (!response.ok) {\n//         throw new Error('Error in response');\n//     }\n//     const responseData = await response.json();\n//     return responseData;\n// });\n\n// const updateLocalDataSize = createAsyncThunk('api/updateItemHeight', async ({ id, height }) => {\n//     const response = await fetch(`http://localhost:8000/photos/${id}`, {\n//         method: 'PATCH',\n//         headers: {\n//             'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ height })\n//     });\n\n//     if (!response.ok) {\n//         throw new Error('Error in response');\n//     }\n//     const responseData = await response.json();\n//     return responseData;\n// });\n\nconst updateLocalDataSize = createAsyncThunk('api/updateItemHeight', async ({\n  id,\n  height\n}) => {\n  try {\n    const response = await fetch(`http://localhost:8000/photos/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        height\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Error in response');\n    }\n\n    // You should not update `state.tag` but rather update the specific card in `state.data`\n    return {\n      id,\n      height\n    };\n  } catch (error) {\n    throw error;\n  }\n});\nconst apiSlice = createSlice({\n  name: 'api',\n  initialState,\n  reducers: {\n    updateLocalData: (state, action) => {\n      state.tag = [...state.tag, action.payload];\n    },\n    deleteLocalData: (state, action) => {\n      console.log('this is state ->', action.payload);\n      // state.tag = state.tag.filter((items, index) => {\n      //     return (items.tag !== action.payload)\n      // })\n    }\n  },\n\n  extraReducers: builder => {\n    builder.addCase(fetchApiData.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(fetchApiData.fulfilled, (state, action) => {\n      state.loading = 'succeeded';\n      state.data = action.payload;\n    }).addCase(fetchApiData.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    })\n    //add data\n    .addCase(addApiData.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(addApiData.fulfilled, (state, action) => {\n      state.loading = 'succeeded';\n      state.data = action.payload;\n    }).addCase(addApiData.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    })\n    //delete api\n    .addCase(deleteApiData.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(deleteApiData.fulfilled, (state, action) => {\n      state.loading = 'succeeded';\n      state.data = action.payload;\n    }).addCase(deleteApiData.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    })\n\n    //updateHeightOfItem\n    .addCase(updateLocalDataSize.pending, state => {\n      state.loading = 'loading';\n      state.error = null;\n    }).addCase(updateLocalDataSize.fulfilled, (state, action) => {\n      const {\n        id,\n        height\n      } = action.payload;\n      const updatedData = state.data.map(item => {\n        if (item.id === id) {\n          return {\n            ...item,\n            height: height\n          };\n        }\n        return item;\n      });\n      state.data = updatedData;\n      state.loading = 'succeeded';\n    }).addCase(updateLocalDataSize.rejected, (state, action) => {\n      state.loading = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  updateLocalData,\n  deleteLocalData\n} = apiSlice.actions;\nexport { fetchApiData, deleteApiData, addApiData, updateLocalDataSize };\nexport default apiSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","data","loading","error","tag","fetchApiData","response","fetch","ok","Error","json","addApiData","method","headers","body","JSON","stringify","responseData","deleteApiData","id","console","log","updateLocalDataSize","height","apiSlice","name","reducers","updateLocalData","state","action","payload","deleteLocalData","extraReducers","builder","addCase","pending","fulfilled","rejected","message","updatedData","map","item","actions","reducer"],"sources":["/home/workspace/Desktop/Projects/gallery-template/src/components/redux/apiSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n\nconst initialState = {\n    data: [],\n    loading: 'idle',\n    error: null,\n    tag: [],\n};\n\nconst fetchApiData = createAsyncThunk('api/fetchData', async () => {\n\n    // const response = await fetch(\"https://api.slingacademy.com/v1/sample-data/photos?offset=5&limit=20\");\n    const response = await fetch(\"http://localhost:8000/photos\")\n\n    if (!response.ok) {\n        throw new Error('Error in response');\n    }\n    const data = await response.json();\n    return data;\n});\n\n\n\nconst addApiData = createAsyncThunk('api/addData', async (data) => {\n    const response = await fetch(\"http://localhost:8000/photos\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n        throw new Error('Error in response');\n    }\n    const responseData = await response.json();\n    return responseData;\n});\n\n\n\nconst deleteApiData = createAsyncThunk('api/deleteData', async (id) => {\n    console.log('this is id ---.>>', id)\n    const response = await fetch(`http://localhost:8000/photos/${id}`, {\n        method: 'DELETE',\n    })\n\n    if (!response.ok) {\n        throw new Error('Error in response');\n    }\n    const data = await response.json();\n    return data;\n});\n\n\n// const updateLocalDataSize = createAsyncThunk('api/updateItemHeight', async (data) => {\n//     const response = await fetch(`http://localhost:8000/photos/`, {\n//         method: 'PUT',\n//         body:JSON.stringify({data})\n//     })\n\n//     if (!response.ok) {\n//         throw new Error('Error in response');\n//     }\n//     const responseData = await response.json();\n//     return responseData;\n// });\n\n// const updateLocalDataSize = createAsyncThunk('api/updateItemHeight', async ({id,height}) => {\n//     const response = await fetch(`http://localhost:8000/photos/${id}`, {\n//         method: 'PUT',\n//         headers: {\n//             'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(height),\n//     });\n\n//     if (!response.ok) {\n//         throw new Error('Error in response');\n//     }\n//     const responseData = await response.json();\n//     return responseData;\n// });\n\n\n// const updateLocalDataSize = createAsyncThunk('api/updateItemHeight', async ({ id, height }) => {\n//     const response = await fetch(`http://localhost:8000/photos/${id}`, {\n//         method: 'PATCH',\n//         headers: {\n//             'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ height })\n//     });\n\n//     if (!response.ok) {\n//         throw new Error('Error in response');\n//     }\n//     const responseData = await response.json();\n//     return responseData;\n// });\n\nconst updateLocalDataSize = createAsyncThunk('api/updateItemHeight', async ({ id, height }) => {\n    try {\n        const response = await fetch(`http://localhost:8000/photos/${id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ height }),\n        });\n\n        if (!response.ok) {\n            throw new Error('Error in response');\n        }\n\n        // You should not update `state.tag` but rather update the specific card in `state.data`\n        return { id, height };\n    } catch (error) {\n        throw error;\n    }\n});\n\n\nconst apiSlice = createSlice({\n    name: 'api',\n    initialState,\n    reducers: {\n        updateLocalData: (state, action) => {\n            state.tag = [...state.tag, action.payload]\n        },\n        deleteLocalData: (state, action) => {\n            console.log('this is state ->',action.payload)\n            // state.tag = state.tag.filter((items, index) => {\n            //     return (items.tag !== action.payload)\n            // })\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchApiData.pending, (state) => {\n                state.loading = 'loading';\n                state.error = null;\n            })\n            .addCase(fetchApiData.fulfilled, (state, action) => {\n                state.loading = 'succeeded';\n                state.data = action.payload;\n            })\n            .addCase(fetchApiData.rejected, (state, action) => {\n                state.loading = 'failed';\n                state.error = action.error.message;\n            })\n            //add data\n            .addCase(addApiData.pending, (state) => {\n                state.loading = 'loading';\n                state.error = null;\n            })\n            .addCase(addApiData.fulfilled, (state, action) => {\n                state.loading = 'succeeded';\n                state.data = action.payload;\n            })\n            .addCase(addApiData.rejected, (state, action) => {\n                state.loading = 'failed';\n                state.error = action.error.message;\n            })\n            //delete api\n            .addCase(deleteApiData.pending, (state) => {\n                state.loading = 'loading';\n                state.error = null;\n            })\n            .addCase(deleteApiData.fulfilled, (state, action) => {\n                state.loading = 'succeeded';\n                state.data = action.payload;\n            })\n            .addCase(deleteApiData.rejected, (state, action) => {\n                state.loading = 'failed';\n                state.error = action.error.message;\n            })\n\n            //updateHeightOfItem\n            .addCase(updateLocalDataSize.pending, (state) => {\n                state.loading = 'loading';\n                state.error = null;\n            })\n            .addCase(updateLocalDataSize.fulfilled, (state, action) => {\n                const { id, height } = action.payload;\n                const updatedData = state.data.map((item) => {\n                    if (item.id === id) {\n                        return {\n                            ...item,\n                            height: height,\n                        };\n                    }\n                    return item;\n                });\n                state.data = updatedData;\n                state.loading = 'succeeded';\n            })\n        \n            .addCase(updateLocalDataSize.rejected, (state, action) => {\n                state.loading = 'failed';\n                state.error = action.error.message;\n            })\n\n    },\n});\n\nexport const { updateLocalData, deleteLocalData } = apiSlice.actions;\nexport { fetchApiData, deleteApiData, addApiData, updateLocalDataSize };\nexport default apiSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}